{"ast":null,"code":"import _asyncToGenerator from \"/Users/delaneyschultz/Desktop/untitled folder 6/hw4final/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { TestBed } from '@angular/core/testing';\nimport { MainComponent } from './main.component';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IndexComponent } from \"../auth/index.component\";\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { ProfileService } from \"../profile/profile.service\";\ndescribe('MainComponent', () => {\n  let component;\n  let fixture;\n  let component2;\n  let fixture2;\n  let service;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [RouterTestingModule, HttpClientTestingModule, ReactiveFormsModule],\n      declarations: [MainComponent, IndexComponent],\n      schemas: [CUSTOM_ELEMENTS_SCHEMA]\n    }).compileComponents();\n    service = TestBed.inject(ProfileService);\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(MainComponent);\n    component = fixture.componentInstance;\n    fixture2 = TestBed.createComponent(IndexComponent);\n    component2 = fixture2.componentInstance;\n    fixture.detectChanges();\n    fixture2.detectChanges();\n  });\n\n  function updateForm(userEmail, userPassword) {\n    component2.logForm.controls['username'].setValue(userEmail);\n    component2.logForm.controls['password'].setValue(userPassword);\n  }\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should log out a user (login state should be cleared)', () => {\n    //Log in\n    updateForm(\"Bret\", \"Kulas Light\");\n    component2.onSubmit();\n    component.testing = true;\n    component.ngOnInit(); //Check log in state\n    //Check user\n\n    expect(component.user).toBe('Bret'); //Check status\n\n    expect(component.newStatus).toBe('Multi-layered client-server neural-net'); //Check peoples who posts show up on feed\n\n    expect(component.people).toEqual([1, 2, 3, 4]); //Check followers\n\n    expect(component.followers).toEqual([{\n      id: 1,\n      name: \"Antonette\",\n      status: \"Proactive didactic contingency\"\n    }, {\n      id: 2,\n      name: \"Samantha\",\n      status: \"Face to face bifurcated interface\"\n    }, {\n      id: 3,\n      name: \"Karianne\",\n      status: \"Multi-tiered zero tolerance productivity\"\n    }]); //Log out\n\n    component.gotoLanding(); //Check log out state\n    //Check user\n\n    expect(component.user).toBe(''); //Check status\n\n    expect(component.newStatus).toBe(''); //Check peoples who posts show up on feed\n\n    expect(component.people).toEqual([]); //Check followers\n\n    expect(component.followers).toEqual([]);\n  });\n  it('should fetch all articles for current logged in user (post state is set)', () => {\n    //Log in\n    updateForm(\"Bret\", \"Kulas Light\");\n    component2.onSubmit();\n    component.testing = true;\n    component.ngOnInit();\n    expect(component.allPosts.length).toBe(40);\n  });\n  it('should add articles when adding a follower (posts state is larger )', () => {\n    //Log in\n    updateForm(\"Bret\", \"Kulas Light\");\n    component2.onSubmit();\n    component.testing = true;\n    component.ngOnInit();\n    component.newFollower = \"Antonette\";\n    component.testing = true;\n    component.addFollower();\n    expect(component.allPosts.length).toBe(50);\n  });\n  it('should remove articles when removing a follower (posts state is smaller)', () => {\n    //Log in\n    updateForm(\"Bret\", \"Kulas Light\");\n    component2.onSubmit();\n    component.testing = true;\n    component.ngOnInit();\n    component.unFollow(\"Antonette\");\n    expect(component.allPosts.length).toBe(30);\n  });\n  it('should properly log in', () => {\n    //Log in\n    updateForm(\"Bret\", \"Kulas Light\");\n    component2.onSubmit();\n    component.testing = true;\n    component.ngOnInit();\n    component.changeStatus();\n    expect(component.user).toBe('Bret');\n    expect(component.registered).toEqual(false);\n  });\n});","map":{"version":3,"sources":["/Users/delaneyschultz/Desktop/untitled folder 6/hw4final/src/app/main/main.component.spec.ts"],"names":["TestBed","MainComponent","RouterTestingModule","HttpClientTestingModule","ReactiveFormsModule","IndexComponent","CUSTOM_ELEMENTS_SCHEMA","ProfileService","describe","component","fixture","component2","fixture2","service","beforeEach","configureTestingModule","imports","declarations","schemas","compileComponents","inject","createComponent","componentInstance","detectChanges","updateForm","userEmail","userPassword","logForm","controls","setValue","it","expect","toBeTruthy","onSubmit","testing","ngOnInit","user","toBe","newStatus","people","toEqual","followers","id","name","status","gotoLanding","allPosts","length","newFollower","addFollower","unFollow","changeStatus","registered"],"mappings":"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","sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { MainComponent } from './main.component';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IndexComponent } from \"../auth/index.component\";\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { ProfileService } from \"../profile/profile.service\";\ndescribe('MainComponent', () => {\n    let component;\n    let fixture;\n    let component2;\n    let fixture2;\n    let service;\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            imports: [RouterTestingModule, HttpClientTestingModule, ReactiveFormsModule],\n            declarations: [MainComponent, IndexComponent],\n            schemas: [CUSTOM_ELEMENTS_SCHEMA],\n        })\n            .compileComponents();\n        service = TestBed.inject(ProfileService);\n    });\n    beforeEach(() => {\n        fixture = TestBed.createComponent(MainComponent);\n        component = fixture.componentInstance;\n        fixture2 = TestBed.createComponent(IndexComponent);\n        component2 = fixture2.componentInstance;\n        fixture.detectChanges();\n        fixture2.detectChanges();\n    });\n    function updateForm(userEmail, userPassword) {\n        component2.logForm.controls['username'].setValue(userEmail);\n        component2.logForm.controls['password'].setValue(userPassword);\n    }\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('should log out a user (login state should be cleared)', () => {\n        //Log in\n        updateForm(\"Bret\", \"Kulas Light\");\n        component2.onSubmit();\n        component.testing = true;\n        component.ngOnInit();\n        //Check log in state\n        //Check user\n        expect(component.user).toBe('Bret');\n        //Check status\n        expect(component.newStatus).toBe('Multi-layered client-server neural-net');\n        //Check peoples who posts show up on feed\n        expect(component.people).toEqual([1, 2, 3, 4]);\n        //Check followers\n        expect(component.followers).toEqual([{ id: 1, name: \"Antonette\", status: \"Proactive didactic contingency\" },\n            { id: 2, name: \"Samantha\", status: \"Face to face bifurcated interface\" }, { id: 3, name: \"Karianne\", status: \"Multi-tiered zero tolerance productivity\" }]);\n        //Log out\n        component.gotoLanding();\n        //Check log out state\n        //Check user\n        expect(component.user).toBe('');\n        //Check status\n        expect(component.newStatus).toBe('');\n        //Check peoples who posts show up on feed\n        expect(component.people).toEqual([]);\n        //Check followers\n        expect(component.followers).toEqual([]);\n    });\n    it('should fetch all articles for current logged in user (post state is set)', () => {\n        //Log in\n        updateForm(\"Bret\", \"Kulas Light\");\n        component2.onSubmit();\n        component.testing = true;\n        component.ngOnInit();\n        expect(component.allPosts.length).toBe(40);\n    });\n    it('should add articles when adding a follower (posts state is larger )', () => {\n        //Log in\n        updateForm(\"Bret\", \"Kulas Light\");\n        component2.onSubmit();\n        component.testing = true;\n        component.ngOnInit();\n        component.newFollower = \"Antonette\";\n        component.testing = true;\n        component.addFollower();\n        expect(component.allPosts.length).toBe(50);\n    });\n    it('should remove articles when removing a follower (posts state is smaller)', () => {\n        //Log in\n        updateForm(\"Bret\", \"Kulas Light\");\n        component2.onSubmit();\n        component.testing = true;\n        component.ngOnInit();\n        component.unFollow(\"Antonette\");\n        expect(component.allPosts.length).toBe(30);\n    });\n    it('should properly log in', () => {\n        //Log in\n        updateForm(\"Bret\", \"Kulas Light\");\n        component2.onSubmit();\n        component.testing = true;\n        component.ngOnInit();\n        component.changeStatus();\n        expect(component.user).toBe('Bret');\n        expect(component.registered).toEqual(false);\n    });\n});\n"]},"metadata":{},"sourceType":"module"}