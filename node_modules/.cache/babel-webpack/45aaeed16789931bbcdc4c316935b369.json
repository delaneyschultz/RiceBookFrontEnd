{"ast":null,"code":"import _asyncToGenerator from \"/Users/delaneyschultz/Desktop/untitled folder 6/hw4final/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { ProfileComponent } from './profile.component';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IndexComponent } from \"../auth/index.component\";\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\ndescribe('ProfileComponent', () => {\n  let component;\n  let fixture;\n  let component2;\n  let fixture2;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [RouterTestingModule, HttpClientTestingModule, ReactiveFormsModule],\n      declarations: [ProfileComponent, IndexComponent],\n      schemas: [CUSTOM_ELEMENTS_SCHEMA]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(ProfileComponent);\n    component = fixture.componentInstance;\n    fixture2 = TestBed.createComponent(IndexComponent);\n    component2 = fixture2.componentInstance;\n    fixture.detectChanges();\n  });\n\n  function updateForm(userEmail, userPassword) {\n    component2.logForm.controls['username'].setValue(userEmail);\n    component2.logForm.controls['password'].setValue(userPassword);\n  }\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should fetch the logged in users profile username', () => {\n    //Log in\n    console.log(\"here\");\n    updateForm(\"Bret\", \"Kulas Light\");\n    component2.onSubmit();\n    console.log(\"here\");\n    component.ngOnInit();\n    expect(component.user).toBe('Bret');\n    expect(component.e).toBe('Sincere@april.biz');\n    expect(component.p).toBe('1-770-736-8031 x56442');\n  });\n});","map":{"version":3,"sources":["/Users/delaneyschultz/Desktop/untitled folder 6/hw4final/src/app/profile/profile.component.spec.ts"],"names":["TestBed","HttpClientTestingModule","ProfileComponent","RouterTestingModule","ReactiveFormsModule","IndexComponent","CUSTOM_ELEMENTS_SCHEMA","describe","component","fixture","component2","fixture2","beforeEach","configureTestingModule","imports","declarations","schemas","compileComponents","createComponent","componentInstance","detectChanges","updateForm","userEmail","userPassword","logForm","controls","setValue","it","expect","toBeTruthy","console","log","onSubmit","ngOnInit","user","toBe","e","p"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,uBAAT,QAAwC,8BAAxC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,sBAAT,QAAuC,eAAvC;AACAC,QAAQ,CAAC,kBAAD,EAAqB,MAAM;AAC/B,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,QAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMZ,OAAO,CAACa,sBAAR,CAA+B;AACjCC,MAAAA,OAAO,EAAE,CAACX,mBAAD,EAAsBF,uBAAtB,EAA+CG,mBAA/C,CADwB;AAEjCW,MAAAA,YAAY,EAAE,CAACb,gBAAD,EAAmBG,cAAnB,CAFmB;AAGjCW,MAAAA,OAAO,EAAE,CAACV,sBAAD;AAHwB,KAA/B,EAKDW,iBALC,EAAN;AAMH,GAPS,EAAV;AAQAL,EAAAA,UAAU,CAAC,MAAM;AACbH,IAAAA,OAAO,GAAGT,OAAO,CAACkB,eAAR,CAAwBhB,gBAAxB,CAAV;AACAM,IAAAA,SAAS,GAAGC,OAAO,CAACU,iBAApB;AACAR,IAAAA,QAAQ,GAAGX,OAAO,CAACkB,eAAR,CAAwBb,cAAxB,CAAX;AACAK,IAAAA,UAAU,GAAGC,QAAQ,CAACQ,iBAAtB;AACAV,IAAAA,OAAO,CAACW,aAAR;AACH,GANS,CAAV;;AAOA,WAASC,UAAT,CAAoBC,SAApB,EAA+BC,YAA/B,EAA6C;AACzCb,IAAAA,UAAU,CAACc,OAAX,CAAmBC,QAAnB,CAA4B,UAA5B,EAAwCC,QAAxC,CAAiDJ,SAAjD;AACAZ,IAAAA,UAAU,CAACc,OAAX,CAAmBC,QAAnB,CAA4B,UAA5B,EAAwCC,QAAxC,CAAiDH,YAAjD;AACH;;AACDI,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACpB,SAAD,CAAN,CAAkBqB,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,mDAAD,EAAsD,MAAM;AAC1D;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAV,IAAAA,UAAU,CAAC,MAAD,EAAS,aAAT,CAAV;AACAX,IAAAA,UAAU,CAACsB,QAAX;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAvB,IAAAA,SAAS,CAACyB,QAAV;AACAL,IAAAA,MAAM,CAACpB,SAAS,CAAC0B,IAAX,CAAN,CAAuBC,IAAvB,CAA4B,MAA5B;AACAP,IAAAA,MAAM,CAACpB,SAAS,CAAC4B,CAAX,CAAN,CAAoBD,IAApB,CAAyB,mBAAzB;AACAP,IAAAA,MAAM,CAACpB,SAAS,CAAC6B,CAAX,CAAN,CAAoBF,IAApB,CAAyB,uBAAzB;AACH,GAVC,CAAF;AAWH,CAtCO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { ProfileComponent } from './profile.component';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IndexComponent } from \"../auth/index.component\";\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\ndescribe('ProfileComponent', () => {\n    let component;\n    let fixture;\n    let component2;\n    let fixture2;\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            imports: [RouterTestingModule, HttpClientTestingModule, ReactiveFormsModule],\n            declarations: [ProfileComponent, IndexComponent],\n            schemas: [CUSTOM_ELEMENTS_SCHEMA]\n        })\n            .compileComponents();\n    });\n    beforeEach(() => {\n        fixture = TestBed.createComponent(ProfileComponent);\n        component = fixture.componentInstance;\n        fixture2 = TestBed.createComponent(IndexComponent);\n        component2 = fixture2.componentInstance;\n        fixture.detectChanges();\n    });\n    function updateForm(userEmail, userPassword) {\n        component2.logForm.controls['username'].setValue(userEmail);\n        component2.logForm.controls['password'].setValue(userPassword);\n    }\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('should fetch the logged in users profile username', () => {\n        //Log in\n        console.log(\"here\");\n        updateForm(\"Bret\", \"Kulas Light\");\n        component2.onSubmit();\n        console.log(\"here\");\n        component.ngOnInit();\n        expect(component.user).toBe('Bret');\n        expect(component.e).toBe('Sincere@april.biz');\n        expect(component.p).toBe('1-770-736-8031 x56442');\n    });\n});\n"]},"metadata":{},"sourceType":"module"}