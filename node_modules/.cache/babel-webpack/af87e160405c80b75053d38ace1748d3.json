{"ast":null,"code":"import _asyncToGenerator from \"/Users/delaneyschultz/Desktop/untitled folder 6/hw4final/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { ProfileComponent } from './profile.component';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IndexComponent } from \"../auth/index.component\";\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { MainComponent } from \"../main/main.component\";\ndescribe('ProfileComponent', () => {\n  let component;\n  let fixture;\n  let component2;\n  let fixture2;\n  let component3;\n  let fixture3;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [RouterTestingModule, HttpClientTestingModule, ReactiveFormsModule],\n      declarations: [ProfileComponent, IndexComponent],\n      schemas: [CUSTOM_ELEMENTS_SCHEMA]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(ProfileComponent);\n    component = fixture.componentInstance;\n    fixture2 = TestBed.createComponent(IndexComponent);\n    component2 = fixture2.componentInstance;\n    fixture3 = TestBed.createComponent(MainComponent);\n    component3 = fixture3.componentInstance;\n    fixture2.detectChanges();\n    fixture.detectChanges();\n  });\n\n  function updateForm(userEmail, userPassword) {\n    component2.logForm.controls['username'].setValue(userEmail);\n    component2.logForm.controls['password'].setValue(userPassword);\n  }\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should fetch the logged in users profile username (Bret)', () => {\n    //Log in\n    updateForm(\"Bret\", \"Kulas Light\");\n    component.testing = true;\n    component2.onSubmit();\n    component.ngOnInit();\n    expect(component.user).toBe('Bret');\n    expect(component.pas).toBe('***********');\n    expect(component.e).toBe('Sincere@april.biz');\n    expect(component.p).toBe('1-770-736-8031 x56442');\n  });\n  it('should update the form', () => {\n    //Log in\n    updateForm(\"Bret\", \"Kulas Light\");\n    component.testing = true;\n    component2.onSubmit();\n    component.ngOnInit();\n    component.onSubmit();\n    expect(component.user).toBe('Bret');\n    expect(component.pas).toBe('***********');\n    expect(component.e).toBe('Sincere@april.biz');\n    expect(component.p).toBe('1-770-736-8031 x56442');\n  });\n  it('should fetch the logged in users profile username (Antonette)', () => {\n    //Log in\n    updateForm(\"Antonette\", \"Victor Plains\");\n    component.testing = true;\n    component2.onSubmit();\n    component.ngOnInit();\n    expect(component.user).toBe('Antonette');\n  });\n  it('should fetch the logged in users profile username (Samantha)', () => {\n    //Log in\n    updateForm(\"Samantha\", \"Douglas Extension\");\n    component.testing = true;\n    component2.onSubmit();\n    component.ngOnInit();\n    expect(component.user).toBe('Samantha');\n  });\n  it('should fetch the logged in users profile username (Karianne)', () => {\n    //Log in\n    updateForm(\"Karianne\", \"Hoeger Mall\");\n    component.testing = true;\n    component2.onSubmit();\n    component.ngOnInit();\n    expect(component.user).toBe('Karianne');\n  });\n  it('should fetch the logged in users profile username (Kamren)', () => {\n    //Log in\n    updateForm(\"Kamren\", \"Skiles Walks\");\n    component.testing = true;\n    component2.onSubmit();\n    component.ngOnInit();\n    expect(component.user).toBe('Kamren');\n  });\n  it('should fetch the logged in users profile username (Leopoldo_Corkery)', () => {\n    //Log in\n    updateForm(\"Leopoldo_Corkery\", \"Norberto Crossing\");\n    component.testing = true;\n    component2.onSubmit();\n    component.ngOnInit();\n    expect(component.user).toBe('Leopoldo_Corkery');\n  });\n  it('should fetch the logged in users profile username (Elwyn.Skiles)', () => {\n    //Log in\n    updateForm(\"Elwyn.Skiles\", \"Rex Trail\");\n    component.testing = true;\n    component2.onSubmit();\n    component.ngOnInit();\n    expect(component.user).toBe('Elwyn.Skiles');\n  });\n  it('should fetch the logged in users profile username (Maxime_Nienow)', () => {\n    //Log in\n    updateForm(\"Maxime_Nienow\", \"Ellsworth Summit\");\n    component.testing = true;\n    component2.onSubmit();\n    component.ngOnInit();\n    expect(component.user).toBe('Maxime_Nienow');\n  });\n  it('should fetch the logged in users profile username (Delphine)', () => {\n    //Log in\n    updateForm(\"Delphine\", \"Dayna Park\");\n    component.testing = true;\n    component2.onSubmit();\n    component.ngOnInit();\n    expect(component.user).toBe('Delphine');\n  });\n  it('should fetch the logged in users profile username (Moriah.Stanton)', () => {\n    //Log in\n    updateForm(\"Moriah.Stanton\", \"Kattie Turnpike\");\n    component.testing = true;\n    component2.onSubmit();\n    component.ngOnInit();\n    expect(component.user).toBe('Moriah.Stanton');\n  });\n});","map":{"version":3,"sources":["/Users/delaneyschultz/Desktop/untitled folder 6/hw4final/src/app/profile/profile.component.spec.ts"],"names":["TestBed","HttpClientTestingModule","ProfileComponent","RouterTestingModule","ReactiveFormsModule","IndexComponent","CUSTOM_ELEMENTS_SCHEMA","MainComponent","describe","component","fixture","component2","fixture2","component3","fixture3","beforeEach","configureTestingModule","imports","declarations","schemas","compileComponents","createComponent","componentInstance","detectChanges","updateForm","userEmail","userPassword","logForm","controls","setValue","it","expect","toBeTruthy","testing","onSubmit","ngOnInit","user","toBe","pas","e","p"],"mappings":"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","sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { ProfileComponent } from './profile.component';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IndexComponent } from \"../auth/index.component\";\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { MainComponent } from \"../main/main.component\";\ndescribe('ProfileComponent', () => {\n    let component;\n    let fixture;\n    let component2;\n    let fixture2;\n    let component3;\n    let fixture3;\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            imports: [RouterTestingModule, HttpClientTestingModule, ReactiveFormsModule],\n            declarations: [ProfileComponent, IndexComponent],\n            schemas: [CUSTOM_ELEMENTS_SCHEMA]\n        })\n            .compileComponents();\n    });\n    beforeEach(() => {\n        fixture = TestBed.createComponent(ProfileComponent);\n        component = fixture.componentInstance;\n        fixture2 = TestBed.createComponent(IndexComponent);\n        component2 = fixture2.componentInstance;\n        fixture3 = TestBed.createComponent(MainComponent);\n        component3 = fixture3.componentInstance;\n        fixture2.detectChanges();\n        fixture.detectChanges();\n    });\n    function updateForm(userEmail, userPassword) {\n        component2.logForm.controls['username'].setValue(userEmail);\n        component2.logForm.controls['password'].setValue(userPassword);\n    }\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('should fetch the logged in users profile username (Bret)', () => {\n        //Log in\n        updateForm(\"Bret\", \"Kulas Light\");\n        component.testing = true;\n        component2.onSubmit();\n        component.ngOnInit();\n        expect(component.user).toBe('Bret');\n        expect(component.pas).toBe('***********');\n        expect(component.e).toBe('Sincere@april.biz');\n        expect(component.p).toBe('1-770-736-8031 x56442');\n    });\n    it('should update the form', () => {\n        //Log in\n        updateForm(\"Bret\", \"Kulas Light\");\n        component.testing = true;\n        component2.onSubmit();\n        component.ngOnInit();\n        component.onSubmit();\n        expect(component.user).toBe('Bret');\n        expect(component.pas).toBe('***********');\n        expect(component.e).toBe('Sincere@april.biz');\n        expect(component.p).toBe('1-770-736-8031 x56442');\n    });\n    it('should fetch the logged in users profile username (Antonette)', () => {\n        //Log in\n        updateForm(\"Antonette\", \"Victor Plains\");\n        component.testing = true;\n        component2.onSubmit();\n        component.ngOnInit();\n        expect(component.user).toBe('Antonette');\n    });\n    it('should fetch the logged in users profile username (Samantha)', () => {\n        //Log in\n        updateForm(\"Samantha\", \"Douglas Extension\");\n        component.testing = true;\n        component2.onSubmit();\n        component.ngOnInit();\n        expect(component.user).toBe('Samantha');\n    });\n    it('should fetch the logged in users profile username (Karianne)', () => {\n        //Log in\n        updateForm(\"Karianne\", \"Hoeger Mall\");\n        component.testing = true;\n        component2.onSubmit();\n        component.ngOnInit();\n        expect(component.user).toBe('Karianne');\n    });\n    it('should fetch the logged in users profile username (Kamren)', () => {\n        //Log in\n        updateForm(\"Kamren\", \"Skiles Walks\");\n        component.testing = true;\n        component2.onSubmit();\n        component.ngOnInit();\n        expect(component.user).toBe('Kamren');\n    });\n    it('should fetch the logged in users profile username (Leopoldo_Corkery)', () => {\n        //Log in\n        updateForm(\"Leopoldo_Corkery\", \"Norberto Crossing\");\n        component.testing = true;\n        component2.onSubmit();\n        component.ngOnInit();\n        expect(component.user).toBe('Leopoldo_Corkery');\n    });\n    it('should fetch the logged in users profile username (Elwyn.Skiles)', () => {\n        //Log in\n        updateForm(\"Elwyn.Skiles\", \"Rex Trail\");\n        component.testing = true;\n        component2.onSubmit();\n        component.ngOnInit();\n        expect(component.user).toBe('Elwyn.Skiles');\n    });\n    it('should fetch the logged in users profile username (Maxime_Nienow)', () => {\n        //Log in\n        updateForm(\"Maxime_Nienow\", \"Ellsworth Summit\");\n        component.testing = true;\n        component2.onSubmit();\n        component.ngOnInit();\n        expect(component.user).toBe('Maxime_Nienow');\n    });\n    it('should fetch the logged in users profile username (Delphine)', () => {\n        //Log in\n        updateForm(\"Delphine\", \"Dayna Park\");\n        component.testing = true;\n        component2.onSubmit();\n        component.ngOnInit();\n        expect(component.user).toBe('Delphine');\n    });\n    it('should fetch the logged in users profile username (Moriah.Stanton)', () => {\n        //Log in\n        updateForm(\"Moriah.Stanton\", \"Kattie Turnpike\");\n        component.testing = true;\n        component2.onSubmit();\n        component.ngOnInit();\n        expect(component.user).toBe('Moriah.Stanton');\n    });\n});\n"]},"metadata":{},"sourceType":"module"}